knitr::opts_chunk$set(warning = FALSE, message = FALSE)
Werte <- data.frame(read.csv("Daten/Daten.csv", sep = ";", dec = ",", header=FALSE))
colnames(Werte) <- c("Namen","M1","M2","M3","M4","M5","M6","M7")
Werte <- Werte[c(1,2,3,5:9),2]
# Ausgabe der Messwerte:
knitr::kable(data.frame(Messgröße = c("L1: Position Drehpunkt [cm]", "L2: Position Fadenende [cm]", "L3: Höhe Zylinder [cm]",
rep("10-Periodendauer [s]", 5)),
Wert = Werte),
caption = "Messwerte aus Versuch 1")
# Bestwert Pendellänge in Metern
0.885-0.04+0.0587/2
# Berechnung von u_L in R
sqrt(2*(((10**-3)/(2*sqrt(6)))**2)+((10**-4)/(2*sqrt(6)))**2)
T_10T <- mean(Werte[4:8])
T_10T
(4*pi**2*0.87435)/(1.8778**2)
# Berechnung von u_g in R
sqrt(( (-8*pi**2*0.87435)/(1.8778)**3 *0.00029)**2+( (4*pi**2)/(1.8778)**2 *0.00029 )**2)
# csv-Datei einlesen
Werte <- read.csv('Daten/Daten.csv', sep=";", dec=",", header=FALSE)
# Spaltennamen umbenennen
colnames(Werte) <- c("Messwert", paste("Versuch", 1:7))
# Zeilennamen umbenennen
rownames(Werte) <- c("L1:Oberes_Ende_in_cm",
"L2:UnteresEnde_in_cm",
"L3:Zylinderhoehe_in_cm",
"Pendellaenge_L",
paste("Zeit_fuer_10-Perioden_", 1:5),
"10-Perioden_Mittelwert")
#Ausgabe
Werte[2:ncol(Werte)]
# Transponieren der Werte für die Analyse
WerteT <- as.data.frame(t(Werte[,-1]))
# Einbindung von benötigen Bibliotheken
library(tidyverse)
# Funktion zum einzeichnen der Fehlerbalken
errorbar <- function(x, ux, y, uy, headwidth=c(1,1)) {
arrows(x0=x, x1=x, y0=y, y1=y+uy,
length=headwidth[1], angle=90)
arrows(x0=x, x1=x, y0=y, y1=y-uy,
length=headwidth[1], angle=90)
arrows(x0=x, x1=x+ux, y0=y, y1=y,
length=headwidth[2], angle=90)
arrows(x0=x, x1=x-uy, y0=y, y1=y,
length=headwidth[2], angle=90)
}
# Eingabe von Unsicherheiten
u_T = 0.00029
u_L = 0.00029
# Selektion von  x- und y-Werten
x <- WerteT$Pendellaenge_L/100
y <- data.matrix(Werte[5:10,2:8], rownames.force = NA)/10
# Gruppierung der Daten
pltdf <- data.frame(x, t(y)) %>% gather(k, v,-x) %>%
mutate(MW = (k=="X10.Perioden_Mittelwert"))
# Plotten
{TFun <- function(x) 2*pi*sqrt(x/9.81)
TFuntxt <- expression("T(L)" == 2*pi*sqrt(frac("L", frac("9.81 m","s^2"))))
plot(x=pltdf$x, y=pltdf$v,
# Fenstergröße
xlim=c(0, max(pltdf$x)),
ylim=c(0, max(pltdf$v)),
# Aesthetics
pch=20, col="black",las=1,
xlab="Pendellänge L [m]",
ylab="Periodendauer T [s]")
errorbar(x=pltdf$x, ux=u_L, y=pltdf$v, uy=u_T, headwidth=c(1, 0.001))
curve(TFun(x), add=TRUE)
points(x=pltdf$x[pltdf$k=="X10.Perioden_Mittelwert"],
y=pltdf$v[pltdf$k=="X10.Perioden_Mittelwert"],
pch=17, col="red", cex=0.7)
legend("bottomright",
legend=c(TFuntxt, "Mittelwert", "Einzelwert"),
col=c("black", "red", "black"),
pch=c(26, 17,20), lty=c(1,0,0), cex=0.8)}
# Berechnung der linearisierten Funktionswerte
xlin=WerteT$Pendellaenge_L/100 # in m
ylin=(WerteT$`10-Perioden_Mittelwert`/10)**2 # in s
# Korellationskoeffizient
cor(x=xlin, y=ylin, method='pearson')
lm <- lm(ylin~xlin)
summary(lm)
#Plotten
{par(mar=c(5,5,2,2))
plot(xlin, ylin, col="transparent", las=1,
xlim=c(0, max(xlin)),
ylim=c(0, max(ylin)),
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2(L)", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")
legend("bottomright",
legend=c(expression(paste("T"^2 == a*L+y )), "Mittelwert T"),
col=c("black", "red"),
pch=c(26, 17), lty=c(1,0))}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
summary(lm)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
Werte <- data.frame(read.csv("Daten/Daten.csv", sep = ";", dec = ",", header=FALSE))
colnames(Werte) <- c("Namen","M1","M2","M3","M4","M5","M6","M7")
Werte <- Werte[c(1,2,3,5:9),2]
# Ausgabe der Messwerte:
knitr::kable(data.frame(Messgröße = c("L1: Position Drehpunkt [cm]", "L2: Position Fadenende [cm]", "L3: Höhe Zylinder [cm]",
rep("10-Periodendauer [s]", 5)),
Wert = Werte),
caption = "Messwerte aus Versuch 1")
# Bestwert Pendellänge in Metern
0.885-0.04+0.0587/2
# Berechnung von u_L in R
sqrt(2*(((10**-3)/(2*sqrt(6)))**2)+((10**-4)/(2*sqrt(6)))**2)
T_10T <- mean(Werte[4:8])
T_10T
(4*pi**2*0.87435)/(1.8778**2)
# Berechnung von u_g in R
sqrt(( (-8*pi**2*0.87435)/(1.8778)**3 *0.00029)**2+( (4*pi**2)/(1.8778)**2 *0.00029 )**2)
# csv-Datei einlesen
Werte <- read.csv('Daten/Daten.csv', sep=";", dec=",", header=FALSE)
# Spaltennamen umbenennen
colnames(Werte) <- c("Messwert", paste("Versuch", 1:7))
# Zeilennamen umbenennen
rownames(Werte) <- c("L1:Oberes_Ende_in_cm",
"L2:UnteresEnde_in_cm",
"L3:Zylinderhoehe_in_cm",
"Pendellaenge_L",
paste("Zeit_fuer_10-Perioden_", 1:5),
"10-Perioden_Mittelwert")
#Ausgabe
Werte[2:ncol(Werte)]
# Transponieren der Werte für die Analyse
WerteT <- as.data.frame(t(Werte[,-1]))
# Einbindung von benötigen Bibliotheken
library(tidyverse)
# Funktion zum einzeichnen der Fehlerbalken
errorbar <- function(x, ux, y, uy, headwidth=c(1,1)) {
arrows(x0=x, x1=x, y0=y, y1=y+uy,
length=headwidth[1], angle=90)
arrows(x0=x, x1=x, y0=y, y1=y-uy,
length=headwidth[1], angle=90)
arrows(x0=x, x1=x+ux, y0=y, y1=y,
length=headwidth[2], angle=90)
arrows(x0=x, x1=x-uy, y0=y, y1=y,
length=headwidth[2], angle=90)
}
# Eingabe von Unsicherheiten
u_T = 0.00029
u_L = 0.00029
# Selektion von  x- und y-Werten
x <- WerteT$Pendellaenge_L/100
y <- data.matrix(Werte[5:10,2:8], rownames.force = NA)/10
# Gruppierung der Daten
pltdf <- data.frame(x, t(y)) %>% gather(k, v,-x) %>%
mutate(MW = (k=="X10.Perioden_Mittelwert"))
# Plotten
{TFun <- function(x) 2*pi*sqrt(x/9.81)
TFuntxt <- expression("T(L)" == 2*pi*sqrt(frac("L", frac("9.81 m","s^2"))))
plot(x=pltdf$x, y=pltdf$v,
# Fenstergröße
xlim=c(0, max(pltdf$x)),
ylim=c(0, max(pltdf$v)),
# Aesthetics
pch=20, col="black",las=1,
xlab="Pendellänge L [m]",
ylab="Periodendauer T [s]")
errorbar(x=pltdf$x, ux=u_L, y=pltdf$v, uy=u_T, headwidth=c(1, 0.001))
curve(TFun(x), add=TRUE)
points(x=pltdf$x[pltdf$k=="X10.Perioden_Mittelwert"],
y=pltdf$v[pltdf$k=="X10.Perioden_Mittelwert"],
pch=17, col="red", cex=0.7)
legend("bottomright",
legend=c(TFuntxt, "Mittelwert", "Einzelwert"),
col=c("black", "red", "black"),
pch=c(26, 17,20), lty=c(1,0,0), cex=0.8)}
# Berechnung der linearisierten Funktionswerte
xlin=WerteT$Pendellaenge_L/100 # in m
ylin=(WerteT$`10-Perioden_Mittelwert`/10)**2 # in s
# Korellationskoeffizient
cor(x=xlin, y=ylin, method='pearson')
lm <- lm(ylin~xlin);lm
#Plotten
{par(mar=c(5,5,2,2))
plot(xlin, ylin, col="transparent", las=1,
xlim=c(0, max(xlin)),
ylim=c(0, max(ylin)),
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2(L)", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")
legend("bottomright",
legend=c(expression(paste("T"^2 == a*L+y )), "Mittelwert T"),
col=c("black", "red"),
pch=c(26, 17), lty=c(1,0))}
summary(lm)
