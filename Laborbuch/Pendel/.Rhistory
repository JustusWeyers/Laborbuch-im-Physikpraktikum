curve(TFun(x), add=TRUE)
points(x=pltdf$x[pltdf$k=="X10.Perioden_Mittelwert"],
y=pltdf$v[pltdf$k=="X10.Perioden_Mittelwert"],
pch=20, col="red")}
legend("bottomright", legend=c("Mittelwert", "Einzelwert", TFuntxt),
col=c("red", "black", "black"), pch=c(20,20, 26), lty=c(0,0,1), cex=0.8)
}
{plot(x=pltdf$x, y=pltdf$v,
# Fenstergröße
xlim=c(0, max(pltdf$x)),
ylim=c(0, max(pltdf$v)),
# Aesthetics
pch=20, col="black",
xlab="Pendellänge L [m]",
ylab="Periodendauer T [s]")
errorbar(x=pltdf$x, ux=u_L, y=pltdf$v, uy=u_T, headwidth=c(1, 0.001))
curve(TFun(x), add=TRUE)
points(x=pltdf$x[pltdf$k=="X10.Perioden_Mittelwert"],
y=pltdf$v[pltdf$k=="X10.Perioden_Mittelwert"],
pch=20, col="red")}
{
plot(x=pltdf$x, y=pltdf$v,
# Fenstergröße
xlim=c(0, max(pltdf$x)),
ylim=c(0, max(pltdf$v)),
# Aesthetics
pch=20, col="black",
xlab="Pendellänge L [m]",
ylab="Periodendauer T [s]")
errorbar(x=pltdf$x, ux=u_L, y=pltdf$v, uy=u_T, headwidth=c(1, 0.001))
curve(TFun(x), add=TRUE)
points(x=pltdf$x[pltdf$k=="X10.Perioden_Mittelwert"],
y=pltdf$v[pltdf$k=="X10.Perioden_Mittelwert"],
pch=20, col="red")
legend("bottomright",
legend=c(TFuntxt, "Mittelwert", "Einzelwert"),
col=c("black", "red", "black"),
pch=c(26, 20,20), lty=c(1,0,0), cex=0.8)
}
TFun <- function(x) 2*pi*sqrt(x/9.81)
TFuntxt <- expression("T" == 2*pi*sqrt(frac("L", frac("m","s"))))
{
plot(x=pltdf$x, y=pltdf$v,
# Fenstergröße
xlim=c(0, max(pltdf$x)),
ylim=c(0, max(pltdf$v)),
# Aesthetics
pch=20, col="black",
xlab="Pendellänge L [m]",
ylab="Periodendauer T [s]")
errorbar(x=pltdf$x, ux=u_L, y=pltdf$v, uy=u_T, headwidth=c(1, 0.001))
curve(TFun(x), add=TRUE)
points(x=pltdf$x[pltdf$k=="X10.Perioden_Mittelwert"],
y=pltdf$v[pltdf$k=="X10.Perioden_Mittelwert"],
pch=20, col="red")
legend("bottomright",
legend=c(TFuntxt, "Mittelwert", "Einzelwert"),
col=c("black", "red", "black"),
pch=c(26, 20,20), lty=c(1,0,0), cex=0.8)
}
TFuntxt <- expression("T" == 2*pi*sqrt(frac("L", frac("9.81 m","s^2"))))
{
plot(x=pltdf$x, y=pltdf$v,
# Fenstergröße
xlim=c(0, max(pltdf$x)),
ylim=c(0, max(pltdf$v)),
# Aesthetics
pch=20, col="black",
xlab="Pendellänge L [m]",
ylab="Periodendauer T [s]")
errorbar(x=pltdf$x, ux=u_L, y=pltdf$v, uy=u_T, headwidth=c(1, 0.001))
curve(TFun(x), add=TRUE)
points(x=pltdf$x[pltdf$k=="X10.Perioden_Mittelwert"],
y=pltdf$v[pltdf$k=="X10.Perioden_Mittelwert"],
pch=20, col="red")
legend("bottomright",
legend=c(TFuntxt, "Mittelwert", "Einzelwert"),
col=c("black", "red", "black"),
pch=c(26, 20,20), lty=c(1,0,0), cex=0.8)
}
TFun <- function(x) 2*pi*sqrt(x/9.81)
TFuntxt <- expression("T" == 2*pi*sqrt(frac("L", frac("9.81 m","s^2"))))
{
plot(x=pltdf$x, y=pltdf$v,
# Fenstergröße
xlim=c(0, max(pltdf$x)),
ylim=c(0, max(pltdf$v)),
# Aesthetics
pch=20, col="black",
xlab="Pendellänge L [m]",
ylab="Periodendauer T [s]")
errorbar(x=pltdf$x, ux=u_L, y=pltdf$v, uy=u_T, headwidth=c(1, 0.001))
curve(TFun(x), add=TRUE)
points(x=pltdf$x[pltdf$k=="X10.Perioden_Mittelwert"],
y=pltdf$v[pltdf$k=="X10.Perioden_Mittelwert"],
pch=20, col="red")
legend("bottomright",
legend=c(TFuntxt, "Mittelwert", "Einzelwert"),
col=c("black", "red", "black"),
pch=c(26, 20,20), lty=c(1,0,0), cex=0.8)
}
pltdf$x
WerteT$Pendellaenge_L
WerteT$Pendellaenge_L/100
WerteT$`10-Perioden_Mittelwert`
c=4*pi**2/9.81
WerteT$`10-Perioden_Mittelwert`*c
plot(xlin, ylin)
xlin=WerteT$Pendellaenge_L/100
ylin=WerteT$`10-Perioden_Mittelwert`*c
plot(xlin, ylin)
c=4*pi**2
xlin=WerteT$Pendellaenge_L/100
ylin=WerteT$`10-Perioden_Mittelwert`*c
plot(xlin, ylin)
# Apply the lm() function.
relation <- lm(ylin~xlin)
print(relation)
cor(xlin, ylin, 'pearson')
?cor(xlin, ylin, 'pearson')
?cor(x=xlin, y=ylin, method='pearson')
cor(x=xlin, y=ylin, method='pearson')
c=4*pi**2
xlin=WerteT$Pendellaenge_L/100
ylin=WerteT$`10-Perioden_Mittelwert`
plot(xlin, ylin)
# Apply the lm() function.
relation <- lm(ylin~xlin)
print(relation)
c=4*pi**2
c/11.232
c=4*pi**2
xlin=WerteT$Pendellaenge_L/100
ylin=WerteT$`10-Perioden_Mittelwert`
plot(xlin, ylin)
cor(x=xlin, y=ylin, method='pearson')
# Apply the lm() function.
relation <- lm(ylin~xlin)
(2*pi**2)/11.232
(4*pi**2)/11.232
(4*pi**2)/sqrt(11.232)
print(relation)
abline(intersect=8.528, slope=11.232)
plot(xlin, ylin)
abline(intersect=8.528, slope=11.232)
{
plot(xlin, ylin)
abline(intersect=8.528, slope=11.232)
}
plot(xlin, ylin, ylim=c(0,25), xlim=c(0,2))
{
plot(xlin, ylin, ylim=c(0,25), xlim=c(0,2))
abline(intersect=8.528, slope=11.232)
}
?abline(intersect=8.528, slope=11.232)
?abline(coef=c(8.528,11.232))
{
plot(xlin, ylin, ylim=c(0,25), xlim=c(0,2))
abline(coef=c(8.528,11.232))
}
4*pi**2
(4*pi**2)/11.232
1/11.232
print(relation)
(4*pi**2)/11.232
xlin=WerteT$Pendellaenge_L/100
ylin=WerteT$`10-Perioden_Mittelwert`
{
plot(xlin, ylin, ylim=c(0,25), xlim=c(0,2))
abline(coef=c(8.528,11.232))
}
ylin=WerteT$`10-Perioden_Mittelwert`/10
{
plot(xlin, ylin, ylim=c(0,25), xlim=c(0,2))
abline(coef=c(8.528,11.232))
}
cor(x=xlin, y=ylin, method='pearson')
# Apply the lm() function.
relation <- lm(ylin~xlin)
print(relation)
xlin=WerteT$Pendellaenge_L/100
ylin=WerteT$`10-Perioden_Mittelwert`/10
plot(xlin, ylin, ylim=c(0,10), xlim=c(0,2))
plot(xlin, ylin, ylim=c(0,3), xlim=c(0,2))
# Apply the lm() function.
relation <- lm(ylin~xlin)
print(relation)
# Apply the lm() function.
relation <- lm(xlin~ylin)
print(relation)
ylin=(WerteT$`10-Perioden_Mittelwert`/10)**2
{
plot(xlin, ylin, ylim=c(0,3), xlim=c(0,2))
}
cor(x=xlin, y=ylin, method='pearson')
# Apply the lm() function.
relation <- lm(xlin~ylin)
print(relation)
# Apply the lm() function.
relation <- lm(ylin~xlin)
print(relation)
(4*pi**2)/4.04209
cor(x=xlin, y=ylin, method='pearson')
# Plotten
plot(xlin, ylin)
relation
relation$coefficients
relation$coefficients[2]
relation$coefficients$xlin
# Apply the lm() function.
lm(ylin~xlin)$coefficients["points", "Pr(>|t|)"]
# Apply the lm() function.
lm(ylin~xlin)$coefficients
# Apply the lm() function.
lm(ylin~xlin)$coefficients['xlin']
# Apply the lm() function.
lm(ylin~xlin)$coefficients['xlin'][1]
# Apply the lm() function.
lm(ylin~xlin)$coefficients['xlin'][1,1]
# Apply the lm() function.
lm(ylin~xlin)$coefficients['xlin'][1][1]
# Apply the lm() function.
?lm(ylin~xlin)
# Apply the lm() function.
lm(ylin~xlin)
# Berechnung der linearisierten Funktionswerte
xlin=WerteT$Pendellaenge_L/100 # in m
ylin=(WerteT$`10-Perioden_Mittelwert`/10)**2 # in s
# Plotten
plot(xlin, ylin)
abline(coef=c(0.01952, 4.04209))
# Plotten
plot(xlin, ylin, col="transparent")
points(xlin, ylin)
# Plotten
{plot(xlin, ylin, col="transparent")
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin)}
points(xlin, ylin, pch=16, col="red")}
# Plotten
{plot(xlin, ylin, col="transparent")
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=16, col="red")}
# Plotten
{plot(xlin, ylin, col="transparent")
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=2, col="red")}
points(xlin, ylin, pch=17, col="red")}
# Plotten
{plot(xlin, ylin, col="transparent")
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")}
# Plotten
{plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("T"^"2", "[s"^"]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")}
# Plotten
{plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# csv-Datei einlesen
Werte <- read.csv('Daten/Daten.csv', sep=";", dec=",", header=FALSE)
# Spaltennamen umbenennen
colnames(Werte) <- c("Messwert", paste("Versuch", 1:7))
# Zeilennamen umbenennen
rownames(Werte) <- c("L1:Oberes_Ende_in_cm",
"L2:UnteresEnde_in_cm",
"L3:Zylinderhoehe_in_cm",
"Pendellaenge_L",
paste("Zeit_fuer_10-Perioden_", 1:5),
"10-Perioden_Mittelwert")
#Ausgabe
Werte[2:ncol(Werte)]
# Transponieren der Werte für die Analyse
WerteT <- as.data.frame(t(Werte[,-1]))
# Einbindung von benötigen Bibliotheken
library(tidyverse)
# Funktion zum einzeichnen der Fehlerbalken
errorbar <- function(x, ux, y, uy, headwidth=c(1,1)) {
arrows(x0=x, x1=x, y0=y, y1=y+uy,
length=headwidth[1], angle=90)
arrows(x0=x, x1=x, y0=y, y1=y-uy,
length=headwidth[1], angle=90)
arrows(x0=x, x1=x+ux, y0=y, y1=y,
length=headwidth[2], angle=90)
arrows(x0=x, x1=x-uy, y0=y, y1=y,
length=headwidth[2], angle=90)
}
# Eingabe von Unsicherheiten
u_T = 0.00029
u_L = 0.00029
# Selektion von  x- und y-Werten
x <- WerteT$Pendellaenge_L/100
y <- data.matrix(Werte[5:10,2:8], rownames.force = NA)/10
# Gruppierung der Daten
pltdf <- data.frame(x, t(y)) %>% gather(k, v,-x) %>%
mutate(MW = (k=="X10.Perioden_Mittelwert"))
# Plotten
{TFun <- function(x) 2*pi*sqrt(x/9.81)
TFuntxt <- expression("T(L)" == 2*pi*sqrt(frac("L", frac("9.81 m","s^2"))))
plot(x=pltdf$x, y=pltdf$v,
# Fenstergröße
xlim=c(0, max(pltdf$x)),
ylim=c(0, max(pltdf$v)),
# Aesthetics
pch=20, col="black",
xlab="Pendellänge L [m]",
ylab="Periodendauer T [s]")
errorbar(x=pltdf$x, ux=u_L, y=pltdf$v, uy=u_T, headwidth=c(1, 0.001))
curve(TFun(x), add=TRUE)
points(x=pltdf$x[pltdf$k=="X10.Perioden_Mittelwert"],
y=pltdf$v[pltdf$k=="X10.Perioden_Mittelwert"],
pch=20, col="red")
legend("bottomright",
legend=c(TFuntxt, "Mittelwert", "Einzelwert"),
col=c("black", "red", "black"),
pch=c(26, 20,20), lty=c(1,0,0), cex=0.8)}
# Berechnung der linearisierten Funktionswerte
xlin=WerteT$Pendellaenge_L/100 # in m
ylin=(WerteT$`10-Perioden_Mittelwert`/10)**2 # in s
# Plotten
{plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")}
# Korellationskoeffizient
cor(x=xlin, y=ylin, method='pearson')
# Apply the lm() function.
lm(ylin~xlin)
(4*pi**2)/4.04209
# Plotten
{plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")}
par(oma=c(4,4,4,4))
# Plotten
{plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")}
par(oma=c(4,6,4,4))
# Plotten
{plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")}
par(mar=c(4,6,4,4))
# Plotten
{plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")}
par(omi=c(4,6,4,4))
# Plotten
{plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")}
par(mar=c(4,0,0,0))
# Plotten
{plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")}
{
par(mar=c(4,0,0,0))
# Plotten
plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")}
par(mar=c(5,5,4,4))
# Plotten
plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
{
par(mar=c(5,5,4,4))
# Plotten
plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")}
{
par(mar=c(5,5,2,2))
# Plotten
plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")}
{
par(mar=c(5,5,2,2))
# Plotten
plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")
dev.off()}
dev.off()}
{
par(mar=c(5,5,2,2))
# Plotten
plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")
dev.off()}
dev.off()
{
par(mar=c(5,5,2,2))
# Plotten
plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")}
{
par(mar=c(5,5,2,2))
# Plotten
plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")
legend("bottomright",
legend=c("TFuntxt", "Mittelwert T"),
col=c("black", "red"),
pch=c(26, 20), lty=c(1,0), cex=0.8)}
legend("bottomright",
legend=c("TFuntxt", "Mittelwert T"),
col=c("black", "red"),
pch=c(26, 17), lty=c(1,0), cex=0.8)}
{
par(mar=c(5,5,2,2))
# Plotten
plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")
legend("bottomright",
legend=c("TFuntxt", "Mittelwert T"),
col=c("black", "red"),
pch=c(26, 17), lty=c(1,0))}
linetxt = expression(paste("T"^"2", "= 4" pi ""^"2"))
linetxt = expression(paste("T"^2 == a*L ))
linetext
linetxt
{
# Plotten
par(mar=c(5,5,2,2))
linetxt = expression(paste("T"^2 == a*L ))
plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")
legend("bottomright",
legend=c(linetxt, "Mittelwert T"),
col=c("black", "red"),
pch=c(26, 17), lty=c(1,0))}
{
# Plotten
par(mar=c(5,5,2,2))
linetxt = expression(paste("T"^2 ==":" k == a*L ))
{
# Plotten
par(mar=c(5,5,2,2))
linetxt = expression(paste("T"^2 == ":", k == a*L ))
plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")
legend("bottomright",
legend=c(linetxt, "Mittelwert T"),
col=c("black", "red"),
pch=c(26, 17), lty=c(1,0))}
{
# Plotten
par(mar=c(5,5,2,2))
plot(xlin, ylin, col="transparent",
xlab="Pendellänge L [m]",
ylab=expression(paste("Quadrierte Periodendauer T"^"2", "[s"^"2","]")))
abline(coef=c(0.01952, 4.04209))
points(xlin, ylin, pch=17, col="red")
legend("bottomright",
legend=c(expression(paste("T"^2 == a*L )), "Mittelwert T"),
col=c("black", "red"),
pch=c(26, 17), lty=c(1,0))}
lm(ylin~xlin)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Berechnung von u_L in R
sqrt(2*(((10**-3)/(2*sqrt(6)))**2)+((10**-4)/(2*sqrt(6)))**2)
