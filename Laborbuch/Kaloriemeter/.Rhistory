{
plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
)
legend(300, (0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(lmsummary$coefficients[2,2], 5))),
col=c("black", "black"), pch = c(1,26), lty=c(0,1),
bty = "n")
}
{
plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
)
abline(slope=a)
legend(300, (0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "black"), pch = c(1,26), lty=c(0,1),
bty = "n")
}
R <- lmsummary$coefficients[2,2]
{
plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
)
abline(slope=a)
legend(300, (0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "black"), pch = c(1,26), lty=c(0,1),
bty = "n")
}
{
plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
)
abline(slope=a, intercept = b)
legend(300, (0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "black"), pch = c(1,26), lty=c(0,1),
bty = "n")
}
?abline(slope=a, intercept = b)
{
plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
)
abline(coef=c(a, b)),
{
plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
)
abline(coef=c(a, b))
legend(300, (0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "black"), pch = c(1,26), lty=c(0,1),
bty = "n")
}
{
plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
)
abline(coef=c(b, a))
legend(300, (0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "black"), pch = c(1,26), lty=c(0,1),
bty = "n")
}
{
plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
)
abline(coef=c(b, a))
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
legend(300, (0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "black"), pch = c(1,26), lty=c(0,1),
bty = "n")
}
zeitreiheErhitzung <- read.csv("Daten/Messreihe.csv", sep = ";", dec=",")[2:,10:11]
# Einlesen der csv-Datei
zeitreiheErhitzung <- read.csv("Daten/Messreihe.csv", sep = ";", dec=",")
# Tidy-up
zeitreiheErhitzung <- zeitreiheErhitzung[2:nrow(zeitreiheErhitzung), 10:11]
colnames(zeitreiheErhitzung) <- c("Zeit_s", "Temperatur")
# Lineare Regression
lm <- lm(zeitreiheErhitzung$Temperatur~zeitreiheErhitzung$Zeit_s)
# Steigung a extrahieren
a <- lm$coefficient[2]
# Y-Achsenabschnitt b extrahieren
b <- lm$coefficient[1]
# Standardfehler R^2 extrahieren
lmsummary <- summary(lm)
R <- lmsummary$coefficients[2,2]
# Ausgabe als Plot
{plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
)
abline(coef=c(b, a))
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
legend(300, (0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "black"), pch = c(1,26), lty=c(0,1),
bty = "n")
}
# Ausgabe als Plot
{plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
pch=17)
abline(coef=c(b, a))
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
legend(300, (0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "black"), pch = c(1,26), lty=c(0,1),
bty = "n")
}
# Ausgabe als Plot
{plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
pch=20)
abline(coef=c(b, a))
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
legend(300, (0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "black"), pch = c(20,26), lty=c(0,1),
bty = "n")
}
# Legendenerzeugung
legend(x=300, y=(0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "black"), pch = c(20,26), lty=c(0,1),
bty = "n")
# Ausgabe als Plot
{plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
pch=20)
# Einzeichnen der Regressionsgeraden
abline(coef=c(b, a))
# Einzeichen der Regressiosgeraden ab-/zuzüglich des Fehlers
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
# Legendenerzeugung
legend(x=300, y=(0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "black"), pch = c(20,26), lty=c(0,1),
bty = "n")
}
# Ausgabe als Plot
{plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
pch=20)
# Einzeichnen der Regressionsgeraden
abline(coef=c(b, a))
# Einzeichen der Regressiosgeraden ab-/zuzüglich des Fehlers
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
# Legendenerzeugung
legend(x=300, y=(0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "black"), pch = c(20), lty=c(0,1),
bty = "n")
}
# Ausgabe als Plot
{plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
pch=20)
# Einzeichnen der Regressionsgeraden
abline(coef=c(b, a))
# Einzeichen der Regressiosgeraden ab-/zuzüglich des Fehlers
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
# Legendenerzeugung
legend(x=300, y=(0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "white"), pch = 20, lty=c(0,1),
bty = "n")
}
# Ausgabe als Plot
{plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
ylab = "Temperatur T in °C",
xlab = "Zeit t in s",
pch=20)
# Einzeichnen der Regressionsgeraden
abline(coef=c(b, a))
# Einzeichen der Regressiosgeraden ab-/zuzüglich des Fehlers
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
# Legendenerzeugung
legend(x=300, y=(0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "white"), pch = 20, lty=c(0,1),
bty = "n")
}
# Ausgabe als Plot
{plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
ylab = "Temperatur T in °C",
xlab = "Zeit t in s",
pch=20, las=1)
# Einzeichnen der Regressionsgeraden
abline(coef=c(b, a))
# Einzeichen der Regressiosgeraden ab-/zuzüglich des Fehlers
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
# Legendenerzeugung
legend(x=300, y=(0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "white"), pch = 20, lty=c(0,1),
bty = "n")
}
# Ausgabe als Plot
{plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
ylab = "Temperatur T in °C",
xlab = "Zeit t in s",
title= "Temperaturverlauf im Kaloriemeter",
pch=20, las=1)
# Einzeichnen der Regressionsgeraden
abline(coef=c(b, a))
# Einzeichen der Regressiosgeraden ab-/zuzüglich des Fehlers
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
# Legendenerzeugung
legend(x=300, y=(0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "white"), pch = 20, lty=c(0,1),
bty = "n")
}
# Ausgabe als Plot
{plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
ylab = "Temperatur T in °C",
xlab = "Zeit t in s",
main= "Temperaturverlauf im Kaloriemeter",
pch=20, las=1)
# Einzeichnen der Regressionsgeraden
abline(coef=c(b, a))
# Einzeichen der Regressiosgeraden ab-/zuzüglich des Fehlers
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
# Legendenerzeugung
legend(x=300, y=(0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,3),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "white"), pch = 20, lty=c(0,1),
bty = "n")
}
# Legendenerzeugung
legend(x=300, y=(0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,5),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "white"), pch = 20, lty=c(0,1),
bty = "n")
# Ausgabe als Plot
{plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
ylab = "Temperatur T in °C",
xlab = "Zeit t in s",
main= "Temperaturverlauf im Kaloriemeter",
pch=20, las=1)
# Einzeichnen der Regressionsgeraden
abline(coef=c(b, a))
# Einzeichen der Regressiosgeraden ab-/zuzüglich des Fehlers
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
# Legendenerzeugung
legend(x=300, y=(0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,5),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "white"), pch = 20, lty=c(0,1),
bty = "n")
}
# Ausgabe als Plot
{plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
ylab = "Temperatur T in °C",
xlab = "Zeit t in s",
main= "Temperaturverlauf im Kaloriemeter",
pch=20, las=1)
# Einzeichnen der Regressionsgeraden
abline(coef=c(b, a))
# Einzeichen der Regressiosgeraden ab-/zuzüglich des Fehlers
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
# Legendenerzeugung
legend(x=300, y=(0.9*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:\na = ", round(a,5),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col=c("black", "white"), pch = 20, lty=c(0,1),
bty = "n")
}
```
0.1/(2*sqrt(3))*2
messwerte <- data.frame(Größe <- c("Becherglas mit Wasser [g]", "Masse Becherglas [g]", "Wassermasse [g]", "Metallvolumen [cm^3]", "Anfangstemperatur"),
Messwert <- c(235.5, 97.4, 235.5-97.4, 23.00, 50.000),
Geräteart <- c("digital", "digital", "digital", "analog", "digital"),
Unsicherheit <- c(0.029, 0.029, 2*0.029, 0.20, 0.029)
)
messwerte
messwerte <- data.frame(Größe = c("Becherglas mit Wasser [g]", "Masse Becherglas [g]", "Wassermasse [g]", "Metallvolumen [cm^3]", "Anfangstemperatur"),
Messwert = c(235.5, 97.4, 235.5-97.4, 23.00, 50.000),
Geräteart = c("digital", "digital", "digital", "analog", "digital"),
Unsicherheit = c(0.029, 0.029, 2*0.029, 0.20, 0.029)
)
messwerte
messwerte <- data.frame(Größe = c("Becherglas mit Wasser [g]", "Masse Becherglas [g]", "Wassermasse [g]", "Metallvolumen [cm^3]", "Anfangstemperatur [°C]", "Mischtemperatur [°C]"),
Messwert = c(235.5, 97.4, 235.5-97.4, 23.00, 50.000, 44.2),
Geräteart = c("digital", "digital", "digital", "analog", "digital", "digital"),
Unsicherheit = c(0.029, 0.029, 2*0.029, 0.20, 0.029, 0.029)
)
messwerte
rownames(messwerte) <- messwerte$Größe
messwerte
# Messgrößen
greosse = c("Becherglas mit Wasser [g]", "Masse Becherglas [g]", "Wassermasse [g]", "Metallvolumen [cm^3]", "Anfangstemperatur [°C]", "Mischtemperatur [°C]")
messwerte <- data.frame(Messwert = c(235.5, 97.4, 235.5-97.4, 23.00, 50.000, 44.2),
Geräteart = c("digital", "digital", "digital", "analog", "digital", "digital"),
Unsicherheit = c(0.029, 0.029, 2*0.029, 0.20, 0.029, 0.029)
)
rownames(messwerte) <- groesse
messwerte
# Messgrößen
greosse = c("Becherglas mit Wasser [g]", "Masse Becherglas [g]", "Wassermasse [g]", "Metallvolumen [cm^3]", "Anfangstemperatur [°C]", "Mischtemperatur [°C]")
messwerte <- data.frame(Messwert = c(235.5, 97.4, 235.5-97.4, 23.00, 50.000, 44.2),
Geräteart = c("digital", "digital", "digital", "analog", "digital", "digital"),
Unsicherheit = c(0.029, 0.029, 2*0.029, 0.20, 0.029, 0.029)
)
rownames(messwerte) <- groesse
# Messgrößen
groesse = c("Becherglas mit Wasser [g]", "Masse Becherglas [g]", "Wassermasse [g]", "Metallvolumen [cm^3]", "Anfangstemperatur [°C]", "Mischtemperatur [°C]")
messwerte <- data.frame(Messwert = c(235.5, 97.4, 235.5-97.4, 23.00, 50.000, 44.2),
Geräteart = c("digital", "digital", "digital", "analog", "digital", "digital"),
Unsicherheit = c(0.029, 0.029, 2*0.029, 0.20, 0.029, 0.029)
)
rownames(messwerte) <- groesse
messwerte
# Messgrößen
groesse = c("Becherglas mit Wasser [g]", "Masse Becherglas [g]", "Wassermasse [g]", "Metallvolumen [cm^3]", "Anfangstemperatur [°C]", "Mischtemperatur [°C]")
messwerte <- data.frame(Messwert = c(241.3, 97.4, 241.3-97.4, 22.00, 49.100, 42.8),
Geräteart = c("digital", "digital", "digital", "analog", "digital", "digital"),
Unsicherheit = c(0.029, 0.029, 2*0.029, 0.20, 0.029, 0.029)
)
rownames(messwerte) <- groesse
messwerte
# Ausgabe als Plot
p <- {plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
ylab = "Temperatur T in °C",
xlab = "Zeit t in s",
main= "Temperaturverlauf im Kaloriemeter",
pch=20, las=1)
# Einzeichnen der Regressionsgeraden
abline(coef=c(b, a))
# Einzeichen der Regressiosgeraden ab-/zuzüglich des Fehlers
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
# Legendenerzeugung
legend(x=270, y=(0.98*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:",
"\ny=ax+b",
"\na = ", round(a,5),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col="black", pch = c(20, 26), lty=c(0,1),
bty = "n")
}
# Einlesen der csv-Datei
zeitreiheErhitzung <- read.csv("Daten/Messreihe.csv", sep = ";", dec=",")
# Tidy-up
zeitreiheErhitzung <- zeitreiheErhitzung[2:nrow(zeitreiheErhitzung), 10:11]
colnames(zeitreiheErhitzung) <- c("Zeit_s", "Temperatur")
# Lineare Regression
lm <- lm(zeitreiheErhitzung$Temperatur~zeitreiheErhitzung$Zeit_s)
# Steigung a extrahieren
a <- lm$coefficient[2]
# Y-Achsenabschnitt b extrahieren
b <- lm$coefficient[1]
# Standardfehler R^2 extrahieren
lmsummary <- summary(lm)
R <- lmsummary$coefficients[2,2]
# Ausgabe als Plot
p <- {plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
ylab = "Temperatur T in °C",
xlab = "Zeit t in s",
main= "Temperaturverlauf im Kaloriemeter",
pch=20, las=1)
# Einzeichnen der Regressionsgeraden
abline(coef=c(b, a))
# Einzeichen der Regressiosgeraden ab-/zuzüglich des Fehlers
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
# Legendenerzeugung
legend(x=270, y=(0.98*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:",
"\ny=ax+b",
"\na = ", round(a,5),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col="black", pch = c(20, 26), lty=c(0,1),
bty = "n")
}
328.8-165.1)
328.8-165.1
0.1/(2*sqrt(3))
0.01/(2*sqrt(3))
(5.7*2.2)/(0.01641)-4180*0.1637
0.1/(2*sqrt(3))
0.1/(2*sqrt(6))
0.1/(2*sqrt(3))
sqrt((2.20/0.01641*0.0029)^2+(5.70/0.01641*0.0029)^2+(5.70*2.20/0.01641**2*0.00022)^2+(4180*29*10**(-6))^2)
sqrt((2.20/0.01641*0.0029)**2+(5.70/0.01641*0.0029)**2+(5.70*2.20/0.01641**2*0.00022)**2+(4180*29*10**(-6))**2)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
summary(lm)
# Lineare Regression
lm <- lm(zeitreiheErhitzung$Temperatur~zeitreiheErhitzung$Zeit_s)
summary(lm)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# Einlesen der csv-Datei
zeitreiheErhitzung <- read.csv("Daten/Messreihe.csv", sep = ";", dec=",")
# Tidy-up
zeitreiheErhitzung <- zeitreiheErhitzung[2:nrow(zeitreiheErhitzung), 10:11]
colnames(zeitreiheErhitzung) <- c("Zeit_s", "Temperatur")
# Lineare Regression
lm <- lm(zeitreiheErhitzung$Temperatur~zeitreiheErhitzung$Zeit_s)
# Steigung a extrahieren
a <- lm$coefficient[2]
# Y-Achsenabschnitt b extrahieren
b <- lm$coefficient[1]
# Standardfehler R^2 extrahieren
lmsummary <- summary(lm)
R <- lmsummary$coefficients[2,2]
# Ausgabe als Plot
{plot(x=zeitreiheErhitzung$Zeit_s, y=zeitreiheErhitzung$Temperatur,
# Aesthetics
ylab = "Temperatur T in °C",
xlab = "Zeit t in s",
main= "Temperaturverlauf im Kaloriemeter",
pch=20, las=1)
# Einzeichnen der Regressionsgeraden
abline(coef=c(b, a))
# Einzeichen der Regressiosgeraden ab-/zuzüglich des Fehlers
abline(coef=c(b, a-R))
abline(coef=c(b, a+R))
# Legendenerzeugung
legend(x=270, y=(0.98*max(zeitreiheErhitzung$Temperatur)),
legend=c("Messwerte", paste("Lineare Regression:",
"\ny=ax+b",
"\na = ", round(a,5),
"\nb = ", round(b,3),
"\nR^2 = ", round(R, 5))),
col="black", pch = c(20, 26), lty=c(0,1),
bty = "n")
}
# Lineare Regression
lm <- lm(zeitreiheErhitzung$Temperatur~zeitreiheErhitzung$Zeit_s)
summary(lm)
# Berechnung in R
(5.7*2.2)/(0.01641)-4180*0.1637
# Berechnung in R
sqrt((2.20/0.01641*0.0029)**2+(5.70/0.01641*0.0029)**2+
(5.70*2.20/0.01641**2*0.00022)**2+(4180*29*10**(-6))**2)
# Messgrößen
groesse = c("Becherglas mit Wasser [g]", "Masse Becherglas [g]", "Wassermasse [g]", "Metallvolumen [ml]", "Anfangstemperatur [°C]", "Mischtemperatur [°C]")
messwerte <- data.frame(Messwert = c(235.5, 97.4, 235.5-97.4, 23.00, 50.000, 44.2),
Geräteart = c("digital", "digital", "-", "analog", "digital", "digital"),
kleinste_ablesbare_Einheit_a = c(0.1, 0.1, "-", 1, 0.1, 0.1),
Unsicherheit = c(0.029, 0.029, 2*0.029, 0.20, 0.029, 0.029)
)
rownames(messwerte) <- groesse
knitr::kable(messwerte, caption = "Aufgenommene Messwerte samt Unsicherheiten für das untersuchte orangene Metall")
# Messgrößen
groesse = c("Becherglas mit Wasser [g]", "Masse Becherglas [g]", "Wassermasse [g]", "Metallvolumen [cm³]", "Anfangstemperatur [°C]", "Mischtemperatur [°C]")
messwerte <- data.frame(Messwert = c(241.3, 97.4, 241.3-97.4, 22.00, 49.100, 42.8),
Geräteart = c("digital", "digital", "-", "analog", "digital", "digital"),
Unsicherheit = c(0.029, 0.029, 2*0.029, 0.20, 0.029, 0.029)
)
rownames(messwerte) <- groesse
knitr::kable(messwerte, caption = "Aufgenommene Messwerte samt Unsicherheiten für das untersuchte graue Metall")
